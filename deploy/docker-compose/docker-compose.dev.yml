version: '3.8'

services:
  frontend:
    build:
      context: ../../frontend
      dockerfile: ../docker/frontend/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - ipams-network

  backend:
    build:
      context: ../../backend
      dockerfile: ../docker/backend/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../../backend:/app
      - ../../backend/uploads:/app/uploads
    depends_on:
      - redis
      - mysql
    networks:
      - ipams-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ipams-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=dev_root_password
      - MYSQL_DATABASE=ipams
      - MYSQL_USER=ipams_user
      - MYSQL_PASSWORD=dev_password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ipams-network

networks:
  ipams-network:
    driver: bridge

volumes:
  redis-data:
  mysql-data: